% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation.R
\name{dv_validate}
\alias{dv_validate}
\alias{validate_dv}
\title{Additional validation checks on a DataVolley file}
\usage{
dv_validate(x, validation_level = 2, options = list(), file_type)

validate_dv(x, validation_level = 2, options = list(), file_type)
}
\arguments{
\item{x}{datavolley: datavolley object as returned by \code{dv_read}}

\item{validation_level}{numeric: how strictly to check? If 0, perform no checking; if 1, only identify major errors; if 2, also return any issues that are likely to lead to misinterpretation of data; if 3, return all issues (including minor issues such as those that might have resulted from selective post-processing of compound codes)}

\item{options}{list: named list of options that control optional validation behaviour. Valid entries are:
\itemize{
  \item setter_tip_codes character: vector of attack codes that represent setter tips (or other attacks that a back-row player can validly make from a front-row position). If you code setter tips as attacks, and don't want such attacks to be flagged as an error when made by a back-row player in a front-row zone, enter the setter tip attack codes here. e.g. \code{options=list(setter_tip_codes=c("PP","XY"))}
}}

\item{file_type}{string: "indoor" or "beach". If not provided, will be taken from the \code{x$file_meta$file_format} entry}
}
\value{
data.frame with columns message (the validation message), file_line_number (the corresponding line number in the DataVolley file), video_time, and file_line (the actual line from the DataVolley file).
}
\description{
This function is automatically run as part of \code{dv_read} if \code{extra_validation} is greater than zero.
The current validation messages/checks are:
\itemize{
  \item message "The total of the home/visiting team scores in the match result summary (x$meta$result) does not match the total number of points recorded for the home/visiting team in the plays data"
  \item message "Home/Visiting team roster is empty": the home or visiting team roster has not been entered
  \item message "Players xxx and yyy have the same player ID": player IDs should be unique, and so duplicated IDs will be flagged here
  \item message "Players xxx and yyy have the same jersey number": players on the same team should not have the same jersey number
  \item message "The listed player is not on court in this rotation": the player making the action is not part of the current rotation. Libero players are ignored for this check
  \item message "Back-row player made an attack from a front-row zone": an attack starting from zones 2-4 was made by a player in the back row of the current rotation
  \item message "Front-row player made an attack from a back-row zone (legal, but possibly a scouting error)": an attack starting from zones 1,5-9 was made by a player in the front row of the current rotation
  \item message "Quick attack by non-middle player"
  \item message "Middle player made a non-quick attack"
  \item message "Block by a back-row player"
  \item message "Winning serve not coded as an ace"
  \item message "Non-winning serve was coded as an ace"
  \item message "Serving player not in position 1"
  \item message "Player designated as libero was recorded making a serve/attack/block"
  \item message "Attack (which was blocked) does not have number of blockers recorded"
  \item message "Attack (which was followed by a block) has 'No block' recorded for number of players"
  \item message "Repeated row with same skill and evaluation_code for the same player"
  \item message "Consecutive actions by the same player"
  \item message "Point awarded to incorrect team following error (or \"error\" evaluation incorrect)"
  \item message "Point awarded to incorrect team (or winning play evaluation incorrect)"
  \item message "Scores do not follow proper sequence": one or both team scores change by more than one point at a time
  \item message "Visiting/Home team rotation has changed incorrectly"
  \item message "Player lineup did not change after substitution: was the sub recorded incorrectly?"
  \item message "Player lineup conflicts with recorded substitution: was the sub recorded incorrectly?"
  \item message "Reception type does not match serve type": the type of reception (e.g. "Jump-float serve reception" does not match the serve type (e.g. "Jump-float serve")
  \item message "Reception start zone does not match serve start zone"
  \item message "Reception end zone does not match serve end zone"
  \item message "Reception end sub-zone does not match serve end sub-zone"
  \item message "Attack type does not match set type": the type of attack (e.g. "Head ball attack") does not match the set type (e.g. "High ball set")
  \item message "Block type does not match attack type": the type of block (e.g. "Head ball block") does not match the attack type (e.g. "High ball attack")
  \item message "Dig type does not match attack type": the type of dig (e.g. "Head ball dig") does not match the attack type (e.g. "High ball attack")
  \item message "Multiple serves in a single rally"
  \item message "Multiple receptions in a single rally"
  \item message "Serve (that was not an error) did not have an accompanying reception"
  \item message "Rally had ball contacts but no serve"
  \item message "Replacement of home/visiting setter: the team is in rotation X but the replacement setter is not in that position"
  \item message "Set on perfect/good reception made by a player other than the designated setter (might indicate an error with the rotation/designated setter)"
  \item message "Setter call on a set made by a player other than the designated setter (might indicate an error with the rotation/designated setter)"
  \item "Setter call on negative reception"
  \item message "Set by the home/visiting team was in between a dig/reception and attack by the other team (was the set assigned to the correct team?)"
}
}
\examples{
\dontrun{
  x <- dv_read(dv_example_file(), insert_technical_timeouts = FALSE)
  xv <- dv_validate(x)

  ## specifying "PP" as the setter tip code
  ## front-row attacks (using this code) by a back-row player won't be flagged as errors
  xv <- dv_validate(x, options = list(setter_tip_codes = c("PP")))
}

}
\seealso{
\code{\link{dv_read}}
}
